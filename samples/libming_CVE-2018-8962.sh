# SPDX-FileCopyrightText: 2023 Stephan Lipp, Technical University of Munich (TUM), et al.
# SPDX-License-Identifier: Apache-2.0

#!/bin/bash

build_dir=${1:-$(realpath "$PWD/../build/src")}

echo "Build directory: $build_dir"

run_dir="/tmp"
fuzz_timeout=60

#with_beacon=false

pushd $run_dir

[ -d libming-CVE-2018-8807 ] && rm -rf libming-CVE-2018-8807

git clone https://github.com/libming/libming.git libming-CVE-2018-8807
pushd libming-CVE-2018-8807
git checkout b72cc2f

./autogen.sh
mkdir build; pushd build
export LLVM_COMPILER=clang
CC=wllvm CXX=wllvm++ CFLAGS="-g -O0 -fno-inline" CXXFLAGS="-g -O0 -fno-inline" ../configure --disable-shared --disable-freetype
make clean; make -j $(nproc) >/dev/null 2>&1

pushd util; extract-bc swftophp; popd

mkdir fuzz; pushd fuzz

cp ../util/swftophp.bc .

echo $'decompile.c:398' > targets.txt

#if [[ "$with_beacon" =~ [Tt][Rr][Uu][Ee] ]]; then
#    ${build_dir}/instrumentation/beacon/precondInfer/precondInfer swftophp.bc --target-file=targets.txt --join-bound=5 >precondInfer.log 2>&1
#    ${build_dir}/instrumentation/beacon/Ins/Ins -output=swftophp.bc -src -blocks=bbreaches__Beacon_Test_targets.txt -log=Ins.log -load=range_res.txt transed.bc
#fi

export AFL_USE_ASAN=1

${build_dir}/instrumentation/windranger/cbi --targets=targets.txt swftophp.bc
${build_dir}/instrumentation/afl-clang-fast swftophp.ci.bc -lpng16 -lm -lz -o swftophp.ci

mkdir in; wget -P in http://condor.depaul.edu/sjost/hci430/flash-examples/swf/bumble-bee1.swf

#export AFL_PRELOAD=${build_dir}/libs/dislocator/libdislocator.so

export AFL_I_DONT_CARE_ABOUT_MISSING_CRASHES=1
export AFL_NO_UI=1
export AFL_SKIP_CPUFREQ=1

timeout $fuzz_timeout ${build_dir}/afl-fuzz -d -m none -i ./in -o ./out ./swftophp.ci @@
